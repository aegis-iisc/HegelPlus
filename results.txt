var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: d
whitespace colon
whitespace refwhitespace lbrace
var: nlrecord
rbrace
semicolon
var: select
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace lbrace
var: nlrecored
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nlrecord
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: nlrecord
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: D'
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: nletter
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace whitespace var: user
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: u
whitespace rcurly
semicolon
var: confirmS
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: subscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: read
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rcurly
semicolon
whitespace whitespace var: remove
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: unsubscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: confirmU
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
rparen
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
                                                                                                                                                    
 Num args 1
 BVi var_h35
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                  Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord{ 
 	 Conj <c (dsel)( , h, d ) = (D)
 	 , 
 	 Conj <c (nlmem)( , D, n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D, n, u ) = (false)
 	 , (confirmed)( , D, n, u ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord
 Key =D' Value = Ty_list Ty_alphanlrecord{ 
 	 Impl < 
 	 Conj <c (dsel)( , h', d ) = (D')
 	 , (dsel)( , h, d ) = (D) >c 
 	 
 	 Conj <c (nlmem)( , D', n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D', n, u ) = (true)
 	 , (confirmed)( , D', n, u ) = (false) >c  >c  > } } 
 } 
 ) 
 apply confirmS  (, n ), u ) 
 	 >>= \lambda var_ret66 . 
 	 apply subscribe  (, n ), u ) 
 	 >>= \lambda var_ret6 . 
 	 Eskip 
 }var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: d
whitespace colon
whitespace refwhitespace lbrace
var: nlrecord
rbrace
semicolon
var: select
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace lbrace
var: nlrecored
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nlrecord
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: nlrecord
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: D'
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: nletter
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace whitespace var: user
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: u
whitespace rcurly
semicolon
var: confirmS
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: subscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: read
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rcurly
semicolon
whitespace whitespace var: remove
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: unsubscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: confirmU
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
rparen
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord{ 
 	 Conj <c (dsel)( , h, d ) = (D)
 	 , 
 	 Conj <c (nlmem)( , D, n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D, n, u ) = (false)
 	 , (confirmed)( , D, n, u ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord
 Key =D' Value = Ty_list Ty_alphanlrecord{ 
 	 Impl < 
 	 Conj <c (dsel)( , h', d ) = (D')
 	 , (dsel)( , h, d ) = (D) >c 
 	 
 	 Conj <c (nlmem)( , D', n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D', n, u ) = (true)
 	 , (confirmed)( , D', n, u ) = (false) >c  >c  > } } 
 } 
 ) 
 apply confirmS  (, n ), u ) 
 	 >>= \lambda locbound202 . 
 	 apply subscribe  (, n ), u ) 
 	 >>= \lambda locbound312 . 
 	 Eskip 
 }var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: d
whitespace colon
whitespace refwhitespace lbrace
var: nlrecord
rbrace
semicolon
var: select
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace lbrace
var: nlrecored
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
var: string
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nlrecord
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: nlrecord
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: D'
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: nletter
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace whitespace var: user
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: u
whitespace rcurly
semicolon
var: confirmS
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: subscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: read
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rcurly
semicolon
whitespace whitespace var: remove
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: unsubscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: confirmU
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
rparen
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
                                                                                                                                                    
 Num args 1
 BVi var_h35
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                  Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord{ 
 	 Conj <c (dsel)( , h, d ) = (D)
 	 , 
 	 Conj <c (nlmem)( , D, n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D, n, u ) = (false)
 	 , (confirmed)( , D, n, u ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_alphanlrecord
 Key =D' Value = Ty_list Ty_alphanlrecord{ 
 	 Impl < 
 	 Conj <c (dsel)( , h', d ) = (D')
 	 , (dsel)( , h, d ) = (D) >c 
 	 
 	 Conj <c (nlmem)( , D', n, u ) = (true)
 	 , 
 	 Conj <c (subscribed)( , D', n, u ) = (true)
 	 , (confirmed)( , D', n, u ) = (false) >c  >c  > } } 
 } 
 ) 
 apply confirmS  (, n ), u ) 
 	 >>= \lambda var_ret66 . 
 	 apply subscribe  (, n ), u ) 
 	 >>= \lambda var_ret6 . 
 	 Eskip 
 }var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: d
whitespace colon
whitespace refwhitespace lbrace
var: nlrecord
rbrace
semicolon
whitespace whitespace var: remove
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: unsubscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace whitespace rcurly
semicolon
whitespace var: confirmU
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: confirmS
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
whitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: subscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: read
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace rparen
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rparen
rcurly
semicolon
whitespace                                                                                               
 Num args 1
 BVi var_h9
 The WP Case 
 The WP Case 2                                                                                        Synthesis returned witout resultvar: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
semicolon
var: d
whitespace colon
whitespace refwhitespace lbrace
var: nlrecord
rbrace
semicolon
var: select
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: D'
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: confirmS
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
var: subscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: read
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
rcurly
semicolon
whitespace whitespace var: remove
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
semicolon
whitespace var: unsubscribe
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace whitespace whitespace rcurly
semicolon
whitespace var: confirmU
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace lparen
var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
conjwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: subscribed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truercurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: nl
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace lparen
var: u
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: user
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D
whitespace comma
whitespace var: n
whitespace comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: subscribed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: confirmed
whitespace lparen
var: D
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falsewhitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: string
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: string
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: nlrecord
rbrace
rparen
dotwhitespace lparen
var: dsel
whitespace lparen
var: h'
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace whitespace var: dsel
whitespace lparen
var: h
comma
whitespace var: d
rparen
whitespace equalopwhitespace var: D
whitespace rparen
whitespace implieswhitespace whitespace lparen
var: v
whitespace equalopwhitespace var: articles
whitespace lparen
var: D'
rparen
whitespace conjwhitespace var: nlmem
whitespace lparen
var: D'
comma
whitespace var: n
comma
whitespace var: u
rparen
whitespace equalopwhitespace falserparen
rcurly
semicolon
whitespace                             Synthesis returned witout resultvar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace notwhitespace lbrace
var: d
equalopvar: y
rbrace
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace notwhitespace lbrace
var: d
equalopvar: x
rbrace
whitespace conjwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int{ 
 	 Conj <c Negation d = x
 	 , 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , (device)( , D, x ) = (true) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_int | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_int
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =D' Value = Ty_list Ty_int{ 
 	 Impl < (didsel)( , h', dtab ) = (D')
 	 (device)( , D', d ) = (false) > } } 
 } 
 ) 
 do apply diff_device  (, x ) 
 	 >>= \lambda locbound31 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound116 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound281 . 
 	 apply delete_device  (, d ), x ) 
 	 >>= \lambda locbound2602 . 
 	 return locbound31 <- [?? : Base {v:Ty_int | true}] 
 	 >>= \lambda var_ret9 . 
 	 Eskip 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace notwhitespace lbrace
var: d
equalopvar: y
rbrace
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace notwhitespace lbrace
var: d
equalopvar: x
rbrace
whitespace conjwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int{ 
 	 Conj <c Negation d = x
 	 , 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , (device)( , D, x ) = (true) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_int | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_int
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =D' Value = Ty_list Ty_int{ 
 	 Impl < (didsel)( , h', dtab ) = (D')
 	 (device)( , D', d ) = (false) > } } 
 } 
 ) 
 apply diff_device  (, x ) 
 	 >>= \lambda locbound15 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound100 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound265 . 
 	 apply delete_device  (, d ), x ) 
 	 >>= \lambda locbound2586 . 
 	 return locbound15 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace notwhitespace lbrace
var: d
equalopvar: y
rbrace
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace notwhitespace lbrace
var: d
equalopvar: x
rbrace
whitespace conjwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
                      Synthesis returned witout resultvar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =CS Value = Ty_list Ty_alphasrpair{ 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (dcssel)( , h, cstab ) = (CS)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , (device)( , D, x ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D' Value = Ty_list Ty_int
 Key =CS' Value = Ty_list Ty_alphasrpair{ 
 	 Impl < 
 	 Conj <c (didsel)( , h', dtab ) = (D')
 	 , (dcssel)( , h', cstab ) = (CS') >c 
 	 
 	 Conj <c (device)( , D', x ) = (true)
 	 , (cansend)( , CS', d, x ) = (true) >c  > } } 
 } 
 ) 
 do apply add_device  (, x ) 
 	 >>= \lambda locbound2468 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound2509 . 
 	 apply delete_device  (, x ), x ) 
 	 >>= \lambda locbound3896 . 
 	 Eskip <- [?? : Base {v_207:Ty_unit | true}] 
 	 >>= \lambda var_ret2322 . 
 	 Eskip 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
ynthesis returned witout resultvar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                    Synthesis returned witout resultvar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =CS Value = Ty_list Ty_alphasrpair{ 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (dcssel)( , h, cstab ) = (CS)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , (device)( , D, x ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D' Value = Ty_list Ty_int
 Key =CS' Value = Ty_list Ty_alphasrpair{ 
 	 Impl < 
 	 Conj <c (didsel)( , h', dtab ) = (D')
 	 , (dcssel)( , h', cstab ) = (CS') >c 
 	 
 	 Conj <c (device)( , D', x ) = (true)
 	 , (cansend)( , CS', d, x ) = (true) >c  > } } 
 } 
 ) 
 apply make_central  (, d ) 
 	 >>= \lambda locbound35 . 
 	 apply make_central  (, d ) 
 	 >>= \lambda locbound89 . 
 	 apply add_device  (, x ) 
 	 >>= \lambda locbound147 . 
 	 apply add_connection  (, x ), x ) 
 	 >>= \lambda locbound216 . 
 	 apply make_central  (, x ) 
 	 >>= \lambda locbound345 . 
 	 apply delete_device  (, x ), x ) 
 	 >>= \lambda locbound879 . 
 	 Eskip 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =CS Value = Ty_list Ty_alphasrpair{ 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , 
 	 Conj <c (dcssel)( , h, cstab ) = (CS)
 	 , 
 	 Conj <c (device)( , D, x ) = (true)
 	 , 
 	 Conj <c (central)( , CS, d ) = (true)
 	 , (central)( , CS, x ) = (false) >c  >c  >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =D' Value = Ty_list Ty_int
 Key =CS' Value = Ty_list Ty_alphasrpair{ 
 	 Impl < 
 	 Conj <c (dcssel)( , h', cstab ) = (CS')
 	 , (didsel)( , h', dtab ) = (D') >c 
 	 
 	 Conj <c (device)( , D', d ) = (false)
 	 , 
 	 Conj <c (device)( , D', x ) = (true)
 	 , 
 	 Conj <c (central)( , CS', d ) = (false)
 	 , (central)( , CS', x ) = (true) >c  >c  >c  > } } 
 } 
 ) 
 do apply make_central  (, x ) 
 	 >>= \lambda locbound927 . 
 	 apply delete_device  (, x ), x ) 
 	 >>= \lambda locbound1136 . 
 	 Eskip <- [?? : Base {v:Ty_unit | true}] 
 	 >>= \lambda var_ret9 . 
 	 Eskip 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
uccess : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =CS Value = Ty_list Ty_alphasrpair{ 
 	 Conj <c (didsel)( , h, dtab ) = (D)
 	 , 
 	 Conj <c (device)( , D, d ) = (true)
 	 , 
 	 Conj <c (dcssel)( , h, cstab ) = (CS)
 	 , 
 	 Conj <c (device)( , D, x ) = (true)
 	 , 
 	 Conj <c (central)( , CS, d ) = (true)
 	 , (central)( , CS, x ) = (false) >c  >c  >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_unit | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_unit
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =D Value = Ty_list Ty_int
 Key =D' Value = Ty_list Ty_int
 Key =CS' Value = Ty_list Ty_alphasrpair{ 
 	 Impl < 
 	 Conj <c (dcssel)( , h', cstab ) = (CS')
 	 , (didsel)( , h', dtab ) = (D') >c 
 	 
 	 Conj <c (device)( , D', d ) = (false)
 	 , 
 	 Conj <c (device)( , D', x ) = (true)
 	 , 
 	 Conj <c (central)( , CS', d ) = (false)
 	 , (central)( , CS', x ) = (true) >c  >c  >c  > } } 
 } 
 ) 
 apply make_central  (, x ) 
 	 >>= \lambda locbound866 . 
 	 apply delete_device  (, x ), x ) 
 	 >>= \lambda locbound1075 . 
 	 Eskip 
 }var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
                                                                                                                                                          Synthesis returned witout resultvar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: is_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
                                                                                                                                                                                                                                                                        
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Casevar: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: is_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: is_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
                                                                                                                                                                                                                                                                        
 Num args 1
 BVi var_h80
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: is_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                                            var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace whitespace lparen
var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
whitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: d
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
                                                                                                                                                                                                    var: dtab
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: cstab
whitespace colon
whitespace refwhitespace lbrace
var: srpair
rbrace
semicolon
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
semicolon
var: is_device
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace implieswhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
semicolon
whitespace var: add_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dsize
whitespace lparen
var: D'
rparen
whitespace equalopwhitespace var: dsize
whitespace lparen
var: D
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: diff_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace var: dsize
whitespace lparen
var: D
rparen
whitespace lessthanopwhitespace int: 1
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace notwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rparen
whitespace rcurly
semicolon
whitespace var: add_connection
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: r
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: cansend
whitespace lparen
var: CS'
comma
whitespace var: s
comma
whitespace var: r
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: make_central
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace falserparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
comma
whitespace lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: delete_device
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace rparen
implieswhitespace whitespace lparen
whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
whitespace lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
whitespace conjwhitespace var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: device
whitespace lparen
var: D'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: y
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
whitespace var: goal
whitespace colon
whitespace lparen
var: d
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace notwhitespace lbrace
var: v
equalopvar: d
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace var: didsel
whitespace lparen
var: h
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D
whitespace conjwhitespace whitespace var: device
whitespace lparen
var: D
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: dcssel
whitespace lparen
var: h
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS
whitespace conjwhitespace var: device
whitespace lparen
var: D
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: d
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: central
whitespace lparen
var: CS
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: D
colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: D'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: CS'
whitespace colon
whitespace lbrace
var: srpair
rbrace
rparen
dotwhitespace lparen
var: dcssel
whitespace lparen
var: h'
comma
whitespace var: cstab
rparen
whitespace equalopwhitespace var: CS'
whitespace conjwhitespace whitespace var: didsel
whitespace lparen
var: h'
comma
whitespace var: dtab
rparen
whitespace equalopwhitespace var: D'
rparen
whitespace implieswhitespace whitespace lparen
var: device
whitespace lparen
var: D'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: device
whitespace lparen
var: D'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: d
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: central
whitespace lparen
var: CS'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
rparen
whitespace rparen
rcurly
semicolon
  var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
rparen
whitespace rparen
rcurly
semicolon
                                                                                                                                                                                                                                                  
 Typechecking apply createTriple  (, locbound43 ), locbound151 ), locbound69 )
 $$$$$$$$$$$$$$$ STANDARD VC_BEGIN TyDBINDS  
 
 locbound151 --->  Ty_alphaquad  
 typespec --->  Ty_alphaquad  
 content --->  Ty_list Ty_char  
 length --->  Ty_int  
 natural --->  Ty_list Ty_char  
 putFuel --->  Function type  
 getFuel --->  Function type  
 createTriple --->  Function type  
 Con --->  Ty_list Ty_char  
 Tys --->  Ty_alphaquad  
 Len --->  Ty_int  
 fuel --->  Ty_ref Ty_int  
 var_h_int17 --->  Ty_heap  
 var_x19 --->  Ty_unknown  
 var_h_int33 --->  Ty_heap  
 var_x35 --->  Ty_unknown  
 var_h_int38 --->  Ty_heap  
 var_x40 --->  Ty_int  
 var_h_int54 --->  Ty_heap  
 var_x56 --->  Ty_unknown  
 var_h_int59 --->  Ty_heap  
 var_x61 --->  Ty_int  
 var_h_int64 --->  Ty_heap  
 var_x66 --->  Ty_list Ty_char  
 var_h_int80 --->  Ty_heap  
 var_x82 --->  Ty_unknown  
 var_h_int85 --->  Ty_heap  
 var_x87 --->  Ty_int  
 var_h_int90 --->  Ty_heap  
 var_x92 --->  Ty_list Ty_char  
 var_h_int95 --->  Ty_heap  
 var_x97 --->  Ty_int  
 var_h_int162 --->  Ty_heap  
 var_x164 --->  Ty_unknown  
 locbound10 --->  Ty_int  
 var_h_int167 --->  Ty_heap  
 var_x169 --->  Ty_int  
 locbound22 --->  Ty_list Ty_char  
 var_h_int172 --->  Ty_heap  
 var_x174 --->  Ty_list Ty_char  
 locbound43 --->  Ty_int  
 var_h_int177 --->  Ty_heap  
 var_x179 --->  Ty_int  
 locbound69 --->  Ty_list Ty_char  
 var_h_int182 --->  Ty_heap  
 var_x184 --->  Ty_list Ty_char  
 v --->  Ty_alphapngtriple 
 	 ANTE Rel ((length)(locbound69) + (4)) ==(locbound43) 
 	 ------------------------

	 CONS True
 
VC_ENDvar: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
rparen
whitespace rparen
rcurly
semicolon
  var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pair
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: ppfst
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: ppsnd
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
rparen
whitespace rparen
rcurly
semicolon
  var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pair
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: ppfst
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: ppsnd
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
rparen
whitespace rparen
rcurly
semicolon
                                                                                                                                                                                                                                                  
 Typechecking apply createTriple  (, locbound43 ), locbound151 ), locbound69 )
 $$$$$$$$$$$$$$$ STANDARD VC_BEGIN TyDBINDS  
 
 locbound151 --->  Ty_alphaquad  
 typespec --->  Ty_alphaquad  
 content --->  Ty_list Ty_char  
 length --->  Ty_int  
 natural --->  Ty_list Ty_char  
 putFuel --->  Function type  
 getFuel --->  Function type  
 createTriple --->  Function type  
 Con --->  Ty_list Ty_char  
 Tys --->  Ty_alphaquad  
 Len --->  Ty_int  
 fuel --->  Ty_ref Ty_int  
 var_h_int17 --->  Ty_heap  
 var_x19 --->  Ty_unknown  
 var_h_int33 --->  Ty_heap  
 var_x35 --->  Ty_unknown  
 var_h_int38 --->  Ty_heap  
 var_x40 --->  Ty_int  
 var_h_int54 --->  Ty_heap  
 var_x56 --->  Ty_unknown  
 var_h_int59 --->  Ty_heap  
 var_x61 --->  Ty_int  
 var_h_int64 --->  Ty_heap  
 var_x66 --->  Ty_list Ty_char  
 var_h_int80 --->  Ty_heap  
 var_x82 --->  Ty_unknown  
 var_h_int85 --->  Ty_heap  
 var_x87 --->  Ty_int  
 var_h_int90 --->  Ty_heap  
 var_x92 --->  Ty_list Ty_char  
 var_h_int95 --->  Ty_heap  
 var_x97 --->  Ty_int  
 var_h_int162 --->  Ty_heap  
 var_x164 --->  Ty_unknown  
 locbound10 --->  Ty_int  
 var_h_int167 --->  Ty_heap  
 var_x169 --->  Ty_int  
 locbound22 --->  Ty_list Ty_char  
 var_h_int172 --->  Ty_heap  
 var_x174 --->  Ty_list Ty_char  
 locbound43 --->  Ty_int  
 var_h_int177 --->  Ty_heap  
 var_x179 --->  Ty_int  
 locbound69 --->  Ty_list Ty_char  
 var_h_int182 --->  Ty_heap  
 var_x184 --->  Ty_list Ty_char  
 v --->  Ty_alphapngtriple 
 	 ANTE Rel ((length)(locbound69) + (4)) ==(locbound43) 
 	 ------------------------

	 CONS True
 
VC_ENDvar: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: goal
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pair
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: ppfst
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: ppsnd
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: Len
whitespace equalopwhitespace lparen
var: length
whitespace lparen
var: Con
rparen
rparen
whitespace rparen
rcurly
semicolon
  var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: long
whitespace colon
whitespace refwhitespace var: bool
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: hasTypeSpec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace falserparen
rcurly
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: uppercase
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciiupper
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: alphanum
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciialphanum
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespecFix
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace whitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: typespecVar
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: quadlength
whitespace lparen
var: v
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace lparen
whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
whitespace disjwhitespace whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace var: quadlength
whitespace lparen
var: Tys
rparen
whitespace rparen
whitespace rparen
rcurly
semicolon
                              var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: long
whitespace colon
whitespace refwhitespace var: bool
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: hasTypeSpec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace falserparen
rcurly
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: uppercase
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciiupper
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: alphanum
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciialphanum
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespecFix
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace whitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: typespecVar
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: quadlength
whitespace lparen
var: v
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace lparen
whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
whitespace disjwhitespace whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace var: quadlength
whitespace lparen
var: Tys
rparen
whitespace rparen
whitespace rparen
rcurly
semicolon
var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: long
whitespace colon
whitespace refwhitespace var: bool
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: hasTypeSpec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace falserparen
rcurly
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: uppercase
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciiupper
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: alphanum
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciialphanum
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespecFix
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace whitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: typespecVar
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: quadlength
whitespace lparen
var: v
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace lparen
whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
whitespace disjwhitespace whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace var: quadlength
whitespace lparen
var: Tys
rparen
whitespace rparen
whitespace rparen
rcurly
semicolon
                              var: fuel
whitespace colon
whitespace refwhitespace var: int
semicolon
var: long
whitespace colon
whitespace refwhitespace var: bool
semicolon
var: Len
whitespace colon
whitespace var: int
semicolon
var: Tys
whitespace colon
whitespace var: quad
semicolon
var: Con
whitespace colon
whitespace lbrace
var: char
rbrace
semicolon
var: hasTypeSpec
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
colon
var: heap
rparen
dotwhitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace var: bsel
whitespace lparen
var: h'
comma
whitespace var: long
rparen
whitespace equalopwhitespace falserparen
rcurly
semicolon
var: createTriple
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: y
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: z
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace var: length
whitespace lparen
var: z
rparen
whitespace pluswhitespace int: 4
whitespace equalopwhitespace var: x
rcurly
semicolon
whitespace var: getFuel
whitespace colon
whitespace lparen
var: u
whitespace colon
lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dottruercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
rcurly
semicolon
var: putFuel
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: x
rcurly
semicolon
var: natural
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciinumber
whitespace lparen
var: v
rparen
whitespace equalopwhitespace truercurly
semicolon
var: uppercase
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciiupper
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: alphanum
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: e
whitespace colon
whitespace var: char
rparen
comma
whitespace lparen
var: cc
whitespace colon
whitespace var: int
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace conjwhitespace var: asciialphanum
whitespace lparen
var: cc
rparen
whitespace equalopwhitespace truercurly
semicolon
var: length
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace lbrace
var: v
whitespace lessthanopwhitespace int: 4
rbrace
whitespace rcurly
semicolon
var: content
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: char
rbrace
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace lbrace
var: char
rbrace
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: length
whitespace lparen
var: v
rparen
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: typespecFix
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace whitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace falsercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace int: 4
rcurly
semicolon
var: typespecVar
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace lessthanopwhitespace int: 4
whitespace conjwhitespace var: bsel
whitespace lparen
var: h
comma
whitespace var: long
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: quad
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: quad
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
var: fuel
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace ar-minuswhitespace var: quadlength
whitespace lparen
var: v
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pngtriple
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
colon
whitespace var: heap
rparen
comma
lparen
var: v
whitespace colon
whitespace var: pngtriple
rparen
comma
lparen
var: h'
colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Len
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: Tys
colon
var: quad
rparen
comma
whitespace lparen
var: Con
colon
lbrace
var: char
rbrace
rparen
dotwhitespace lparen
var: pnglen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Len
whitespace conjwhitespace var: pngts
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Tys
whitespace conjwhitespace var: pngdata
whitespace lparen
var: v
rparen
whitespace equalopwhitespace var: Con
rparen
whitespace implieswhitespace whitespace lparen
whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: fuel
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace lparen
whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace int: 4
whitespace disjwhitespace whitespace var: Len
whitespace equalopwhitespace var: length
whitespace lparen
var: Con
rparen
whitespace pluswhitespace var: quadlength
whitespace lparen
var: Tys
rparen
whitespace rparen
whitespace rparen
rcurly
semicolon
var: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Q
whitespace colon
whitespace var: queue
semicolon
var: Q'
whitespace colon
whitespace var: queue
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
comma
lparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
lparen
var: Q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: take
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace ar-minuswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace var: Q'
whitespace equalopwhitespace var: Q
whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace var: empty
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
rparen
whitespace rcurly
semicolon
                                                        
 Num args 1
 BVi var_h9
 The WP Case 
 The WP Case 2                                                                            Synthesis returned witout resultvar: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 2
rparen
whitespace rcurly
semicolon
ynthesis returned witout resultvar: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 2
rparen
whitespace rcurly
semicolon
ynthesis returned witout resultvar: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 2
rparen
whitespace rcurly
semicolon
                          Synthesis returned witout resultvar: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: take
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotvar: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace ar-minuswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotvar: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace ar-minuswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
semicolon
                                                      Synthesis returned witout resultvar: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: qmem
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace lparen
whitespace var: qmem
lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
rparen
conjwhitespace whitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace lparen
whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: take
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace ar-minuswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace var: Q'
whitespace equalopwhitespace var: Q
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
rparen
whitespace rcurly
semicolon
                                                                          var: q
whitespace colon
whitespace refwhitespace var: queue
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: Q
whitespace colon
whitespace var: queue
semicolon
var: Q'
whitespace colon
whitespace var: queue
semicolon
var: qmem
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace truercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace lparen
lbrace
var: v
equaloptruerbrace
whitespace iffwhitespace lparen
whitespace var: qmem
lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
rparen
conjwhitespace whitespace lparen
lbrace
var: v
equalopfalserbrace
whitespace iffwhitespace lparen
whitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
rparen
rcurly
semicolon
var: fresh_el
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsercurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: take
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace whitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace ar-minuswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
rcurly
semicolon
var: peek
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qmem
whitespace lparen
var: Q'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace var: Q'
whitespace equalopwhitespace var: Q
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: qsize
whitespace lparen
var: Q
rparen
rparen
whitespace rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
colon
whitespace var: queue
rparen
dotwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
rparen
whitespace implieswhitespace whitespace lparen
var: qmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsize
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace var: qsize
whitespace lparen
var: Q
rparen
whitespace pluswhitespace int: 2
rparen
rcurly
semicolon
                                                                          var: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: t
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: tbl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace minuswhitespace int: 1
rparen
rcurly
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                                      Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Conj <c (sel)( , h, num ) ==(0)
 	 , 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , 
 	 Conj <c Negation (0) > (size)(Tbl)
 	 , (mem)( , Tbl, s ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_float | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_float
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =Tbl' Value = Ty_list Ty_int
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Impl < 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , (ilssel)( , h', tbl ) = (Tbl') >c 
 	 
 	 Conj <c (mem)( , Tbl', s ) = (true)
 	 , (size)(Tbl') ==((size)(Tbl) + (1)) >c  > } } 
 } 
 ) 
 do apply add  (, s ) 
 	 >>= \lambda locbound22 . 
 	 apply size  ( 
 	 >>= \lambda locbound36 . 
 	 apply average_len  ( 
 	 >>= \lambda locbound74 . 
 	 Eskip <- [?? : Base {v:Ty_float | true}] 
 	 >>= \lambda var_ret7 . 
 	 Eskip 
 }var: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: t
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: tbl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace minuswhitespace int: 1
rparen
rcurly
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                            Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Conj <c (sel)( , h, num ) ==(0)
 	 , 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , 
 	 Conj <c Negation (0) > (size)(Tbl)
 	 , (mem)( , Tbl, s ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_float | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_float
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =Tbl' Value = Ty_list Ty_int
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Impl < 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , (ilssel)( , h', tbl ) = (Tbl') >c 
 	 
 	 Conj <c (mem)( , Tbl', s ) = (true)
 	 , (size)(Tbl') ==((size)(Tbl) + (1)) >c  > } } 
 } 
 ) 
 apply add  (, s ) 
 	 >>= \lambda locbound12 . 
 	 apply size  ( 
 	 >>= \lambda locbound26 . 
 	 apply average_len  ( 
 	 >>= \lambda locbound64 . 
 	 Eskip 
 }var: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: t
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: tbl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace minuswhitespace int: 1
rparen
rcurly
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rparen
whitespace whitespace rcurly
semicolon
          Synthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lparen
var: t
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: tbl
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace minuswhitespace int: 1
rparen
rcurly
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace rparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                            Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ Forall 
 	 
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Conj <c (sel)( , h, num ) ==(0)
 	 , 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , 
 	 Conj <c Negation (0) > (size)(Tbl)
 	 , (mem)( , Tbl, s ) = (false) >c  >c  >c  } } 
 } 
 
                                                RET :  Base {v:Ty_float | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_float
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =Tbl' Value = Ty_list Ty_int
 Key =Tbl Value = Ty_list Ty_int{ 
 	 Impl < 
 	 Conj <c (ilssel)( , h, tbl ) = (Tbl)
 	 , (ilssel)( , h', tbl ) = (Tbl') >c 
 	 
 	 Conj <c (mem)( , Tbl', s ) = (true)
 	 , (size)(Tbl') ==((size)(Tbl) + (1)) >c  > } } 
 } 
 ) 
 apply add  (, s ) 
 	 >>= \lambda locbound12 . 
 	 apply size  ( 
 	 >>= \lambda locbound26 . 
 	 apply average_len  ( 
 	 >>= \lambda locbound64 . 
 	 Eskip 
 }var: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create_pair
whitespace colon
whitespace lparen
var: p1
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: p2
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pair
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace comma
whitespace lparen
var: s'
whitespace colon
whitespace var: int
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace lparen
lparen
notwhitespace lbrace
var: s
whitespace equalopwhitespace var: s'
rbrace
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
whitespace implieswhitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create_pair
whitespace colon
whitespace lparen
var: p1
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: p2
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pair
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace comma
whitespace lparen
var: s'
whitespace colon
whitespace var: int
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace lparen
lparen
notwhitespace lbrace
var: s
whitespace equalopwhitespace var: s'
rbrace
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
whitespace implieswhitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create_pair
whitespace colon
whitespace lparen
var: p1
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: p2
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: pair
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
whitespace comma
whitespace lparen
var: s'
whitespace colon
whitespace var: int
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace conjwhitespace lparen
lparen
notwhitespace lbrace
var: s
whitespace equalopwhitespace var: s'
rbrace
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
whitespace implieswhitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s'
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
whitespace whitespace whitespace rcurly
semicolon
        Synthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
rparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
rparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resultvar: tbl
whitespace colon
whitespace refwhitespace lbrace
var: int
rbrace
semicolon
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: fresh_str
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 2
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsercurly
semicolon
var: size
whitespace colon
whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
rcurly
semicolon
var: average_len
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: Tbl
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace implieswhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace lessthanopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace whitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace rcurly
semicolon
var: add
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: s
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: size
whitespace lparen
var: Tbl
rparen
rparen
whitespace conjwhitespace lparen
var: mem
whitespace lparen
var: Tbl
comma
whitespace var: s
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: float
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: float
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Tbl'
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
comma
whitespace lparen
var: Tbl
whitespace colon
whitespace lbrace
var: int
rbrace
rparen
dotwhitespace lparen
var: ilssel
whitespace lparen
var: h
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl
whitespace conjwhitespace whitespace var: ilssel
whitespace lparen
var: h'
comma
whitespace var: tbl
rparen
whitespace equalopwhitespace var: Tbl'
rparen
whitespace whitespace implieswhitespace whitespace lparen
var: mem
whitespace lparen
var: Tbl'
comma
whitespace var: s
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: size
whitespace lparen
var: Tbl'
rparen
whitespace equalopwhitespace var: size
whitespace lparen
var: Tbl
rparen
whitespace pluswhitespace int: 2
rparen
whitespace whitespace whitespace rcurly
semicolon
          Synthesis returned witout resulttypewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                          Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ (sel)( , h, num ) ==(0) } 
 } 
 
                                                RET :  Base {var_v59:Ty_ref Ty_alphavec | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphavec
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphavec
 Key =V' Value = Ty_alphavec{ 
 	 Conj <c (vdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (vdom)( , h', v ) = (true)
 	 , 
 	 Impl < (vsel)( , h', v ) = (V')
 	 (vlen)(V') ==(0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda var_ret63 . 
 	 Eskip 
 }typewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                          Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ (sel)( , h, num ) ==(0) } 
 } 
 
                                                RET :  Base {var_v59:Ty_ref Ty_alphavec | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphavec
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphavec
 Key =V' Value = Ty_alphavec{ 
 	 Conj <c (vdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (vdom)( , h', v ) = (true)
 	 , 
 	 Impl < (vsel)( , h', v ) = (V')
 	 (vlen)(V') ==(0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda var_ret63 . 
 	 Eskip 
 }typewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace whitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
rparen
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              typewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace whitespace notwhitespace lparen
int: 0
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
rparen
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                              Synthesis returned witout resulttypewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 1
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
typewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 1
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          typewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 1
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
                                                                                                                                                                                                                                                                                                  Synthesis returned witout resulttypewhitespace var: vec
semicolon
stexcwhitespace var: vdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vmem
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: vec
whitespace colon
whitespace var: vec
semicolon
stexcwhitespace var: vlen
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: vdisjoint
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: vec
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: num
whitespace colon
whitespace refwhitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: make
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: init
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: resize
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace notwhitespace lparen
var: n
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: n
whitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: len
whitespace lparen
var: V
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vmem
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: set
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: sub
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: NV
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: NV
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace conjwhitespace lparen
var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: vlen
whitespace lparen
var: NV
rparen
whitespace disjwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: NV
rparen
rparen
whitespace rcurly
semicolon
var: fill
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: offset
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
whitespace rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
whitespace conjwhitespace whitespace var: vlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: offset
whitespace pluswhitespace var: n
whitespace rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: vec
rparen
dotwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V
rparen
whitespace whitespace rcurly
semicolon
var: blit
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs1
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: ofs2
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace var: ofs1
whitespace pluswhitespace var: n
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace lessthanopwhitespace var: ofs2
whitespace pluswhitespace var: n
whitespace rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: v2'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace whitespace rcurly
semicolon
var: append
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace lparen
var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
rparen
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace rcurly
semicolon
var: merge_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: a2
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace trueconjwhitespace lparen
lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
rparen
whitespace implieswhitespace whitespace var: Max
whitespace lessthanopwhitespace lparen
var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: V2
rparen
whitespace equalopwhitespace truerparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V2'
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a2
rparen
whitespace equalopwhitespace var: V2'
whitespace conjwhitespace var: vlen
whitespace lparen
var: V2'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: V2
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: V2'
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: map
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace rcurly
semicolon
var: mapi
whitespace colon
whitespace lparen
var: dummy
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: i
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: b
pipe
whitespace truercurly
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lparen
var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace lessthanopwhitespace int: 1
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h'
comma
whitespace var: a1
whitespace rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vdom
whitespace lparen
var: h'
whitespace comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: sel
whitespace lparen
var: h'
comma
whitespace var: num
rparen
whitespace equalopwhitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace pluswhitespace int: 1
whitespace whitespace whitespace rcurly
semicolon
var: fold_left
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
whitespace var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
whitespace var: fold_right
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: l
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace lparen
var: r
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
rparen
whitespace arrow
whitespace whitespace lparen
var: l0
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
semicolon
var: push
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace implieswhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vmem
whitespace lparen
var: V1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: vec
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: vdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: sel
whitespace lparen
var: h
comma
whitespace var: num
rparen
whitespace equalopwhitespace int: 1
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: vec
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: vec
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: vec
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: vec
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: vec
rparen
dotwhitespace whitespace var: vsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: vsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: vlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: vlen
whitespace lparen
var: V1
rparen
whitespace pluswhitespace var: vlen
whitespace lparen
var: VN
rparen
whitespace conjwhitespace var: vdisjoint
whitespace lparen
var: V1'
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace rcurly
semicolon
typewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                                    Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ true } 
 } 
 
                                                RET :  Base {var_v10:Ty_ref Ty_alphabuffer | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphabuffer
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphabuffer
 Key =V' Value = Ty_alphabuffer{ 
 	 Conj <c (rdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (rdom)( , h', v ) = (true)
 	 , 
 	 Impl < (rsel)( , h', v ) = (V')
 	 (rlen)(V') = (0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda var_ret14 . 
 	 Eskip 
 }typewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                              Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ true } 
 } 
 
                                                RET :  Base {var_v10:Ty_ref Ty_alphabuffer | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphabuffer
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphabuffer
 Key =V' Value = Ty_alphabuffer{ 
 	 Conj <c (rdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (rdom)( , h', v ) = (true)
 	 , 
 	 Impl < (rsel)( , h', v ) = (V')
 	 (rlen)(V') = (0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda locbound17 . 
 	 Eskip 
 }typewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                                    Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ true } 
 } 
 
                                                RET :  Base {var_v10:Ty_ref Ty_alphabuffer | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphabuffer
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphabuffer
 Key =V' Value = Ty_alphabuffer{ 
 	 Conj <c (rdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (rdom)( , h', v ) = (true)
 	 , 
 	 Impl < (rsel)( , h', v ) = (V')
 	 (rlen)(V') = (0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda var_ret14 . 
 	 Eskip 
 }typewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
whitespace lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace implieswhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace rcurly
semicolon
                                                              Success : { 
MArrrow ( State 
 
                                                PRE { 
 Forall 
 	 
 Key =h Value = Ty_heap{ true } 
 } 
 
                                                RET :  Base {var_v10:Ty_ref Ty_alphabuffer | true} 
 { 
                                                POST Forall 
 	 
 Key =h Value = Ty_heap
 Key =v Value = Ty_ref Ty_alphabuffer
 Key =h' Value = Ty_heap{ Forall 
 	 
 Key =V Value = Ty_alphabuffer
 Key =V' Value = Ty_alphabuffer{ 
 	 Conj <c (rdom)( , h, v ) = (false)
 	 , 
 	 Conj <c (rdom)( , h', v ) = (true)
 	 , 
 	 Impl < (rsel)( , h', v ) = (V')
 	 (rlen)(V') = (0) > >c  >c  } } 
 } 
 ) 
 apply create  (, capacity ), dummy ) 
 	 >>= \lambda locbound17 . 
 	 Eskip 
 }typewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: buffer
semicolon
whitespace stexcwhitespace var: rdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rmem
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: rsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: buffer
whitespace colon
whitespace var: buffer
semicolon
stexcwhitespace var: rlen
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: int
semicolon
stexcwhitespace var: rdisjoint
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: buffer
whitespace colon
whitespace var: bool
semicolon
var: Max
whitespace colon
whitespace var: int
semicolon
var: create
colon
whitespace lparen
var: capacity
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace lparen
lbrace
var: v
whitespace lessthanopwhitespace int: 0
rbrace
whitespace disjwhitespace lbrace
var: v
equalopint: 0
rbrace
rparen
whitespace conjwhitespace notwhitespace lbrace
var: Max
whitespace lessthanopwhitespace var: v
rbrace
rcurly
rparen
whitespace arrow
whitespace whitespace lparen
var: dummy
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V'
comma
whitespace var: dummy
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: clear
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V'
whitespace conjwhitespace whitespace var: rlen
whitespace lparen
var: V'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: V1'
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1'
whitespace conjwhitespace var: rmem
whitespace lparen
var: V1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: rlen
whitespace lparen
var: V1'
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace minuswhitespace int: 1
whitespace rcurly
semicolon
var: get
whitespace colon
whitespace lparen
var: vec
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace implieswhitespace whitespace var: rlen
whitespace lparen
var: V
rparen
whitespace lessthanopwhitespace var: n
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: vec
rparen
whitespace equalopwhitespace var: V
whitespace conjwhitespace var: rdom
whitespace lparen
var: V
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace conjwhitespace var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truewhitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: a1
whitespace colon
whitespace refwhitespace var: buffer
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: rdom
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: buffer
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: buffer
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: V1
whitespace colon
whitespace var: buffer
rparen
comma
whitespace lparen
var: VN
whitespace colon
whitespace var: buffer
rparen
dotwhitespace var: rdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: V1
whitespace conjwhitespace whitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: VN
whitespace rparen
whitespace implieswhitespace whitespace whitespace lparen
var: rsel
whitespace lparen
var: h'
comma
whitespace var: a1
rparen
whitespace equalopwhitespace var: rsel
whitespace lparen
var: h
comma
whitespace var: a1
rparen
whitespace conjwhitespace lbrace
var: VN
whitespace equalopwhitespace var: V1
rbrace
whitespace conjwhitespace var: rlen
whitespace lparen
var: VN
rparen
whitespace equalopwhitespace var: rlen
whitespace lparen
var: V1
rparen
whitespace conjwhitespace var: rdisjoint
whitespace lparen
var: V1
comma
whitespace var: VN
rparen
whitespace equalopwhitespace truerparen
whitespace whitespace whitespace rcurly
semicolon
                                                                Synthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
                                                                                                  Synthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: numcell
lparen
var: h
rparen
whitespace equalopwhitespace int: 2
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal1
whitespace colon
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: numcell
lparen
var: h
rparen
whitespace equalopwhitespace int: 2
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal1
whitespace colon
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: numcell
lparen
var: h
rparen
whitespace equalopwhitespace int: 2
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal1
whitespace colon
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
                                                            Synthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal3
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal3
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal3
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
                        Synthesis returned witout resulttypewhitespace var: cell
semicolon
typewhitespace var: node
semicolon
stexcwhitespace var: lldom
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: llsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: cell
whitespace colon
whitespace var: node
semicolon
stexcwhitespace var: cons
whitespace colon
whitespace var: node
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: content
whitespace colon
whitespace var: node
whitespace colon
whitespace var: a
semicolon
stexcwhitespace var: next
whitespace colon
whitespace var: node
whitespace colon
whitespace var: cell
semicolon
stexcwhitespace var: numcell
whitespace colon
whitespace var: heap
whitespace colon
whitespace var: int
semicolon
var: null
whitespace colon
whitespace var: cell
semicolon
var: N
whitespace colon
whitespace var: node
semicolon
var: create_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: create_new_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: cons
lparen
var: N'
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
whitespace conjwhitespace notwhitespace lbrace
var: v
whitespace equalopwhitespace var: c
rbrace
whitespace conjwhitespace var: numcell
lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
lparen
var: h
rparen
whitespace pluswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: clear_cell
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace whitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lbrace
var: c
whitespace equalopwhitespace var: null
rbrace
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
whitespace var: get_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace whitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace whitespace rcurly
semicolon
whitespace var: set_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
rcurly
whitespace rparen
whitespace arrow
whitespace lparen
var: n
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
pipe
whitespace notwhitespace lparen
var: v
whitespace equalopwhitespace var: null
rparen
whitespace rcurly
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace notwhitespace lbrace
var: n
equalopwhitespace var: null
rbrace
whitespace conjwhitespace whitespace notwhitespace lbrace
var: c
equalopvar: null
rbrace
whitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: n
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: n
equalopvar: c
rbrace
whitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falserparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: n
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
whitespace var: set_content
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace lparen
var: data
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace var: content
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: data
whitespace conjwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: next
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: get_next
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace implieswhitespace lparen
var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace truerparen
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: cell
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: cell
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace conjwhitespace whitespace var: v
whitespace equalopwhitespace var: next
whitespace lparen
var: N'
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace rcurly
semicolon
var: goal3
whitespace colon
whitespace lparen
var: c
whitespace colon
whitespace var: cell
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: lldom
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace whitespace var: cons
whitespace lparen
var: N
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: next
whitespace lparen
var: N
rparen
whitespace equalopwhitespace var: null
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: N'
whitespace colon
whitespace var: node
rparen
comma
whitespace lparen
var: N
whitespace colon
whitespace var: node
rparen
dotwhitespace var: llsel
whitespace lparen
var: h'
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N'
whitespace conjwhitespace var: llsel
whitespace lparen
var: h
comma
whitespace var: c
rparen
whitespace equalopwhitespace var: N
whitespace conjwhitespace notwhitespace lparen
var: next
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace var: null
rparen
whitespace conjwhitespace var: cons
whitespace lparen
var: N'
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: v
whitespace equalopwhitespace var: content
whitespace lparen
var: N
rparen
whitespace conjwhitespace var: numcell
whitespace lparen
var: h'
rparen
whitespace equalopwhitespace var: numcell
whitespace lparen
var: h
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: queue
semicolon
whitespace stexcwhitespace var: qdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vqmem
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: qsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: queue
semicolon
stexcwhitespace var: qlen
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: push
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: take
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: peek
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: QN
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: QN
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: QN
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace notwhitespace lparen
var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: contains
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotvar: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: transfer
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: q2
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q2'
rparen
whitespace equalopwhitespace lparen
var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace var: qlen
whitespace lparen
var: Q2
rparen
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: Q'
whitespace implieswhitespace whitespace lparen
var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 1
whitespace conjwhitespace whitespace var: vqmem
whitespace lparen
var: Q'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace rcurly
semicolon
                                Synthesis returned witout resulttypewhitespace var: queue
semicolon
whitespace stexcwhitespace var: qdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vqmem
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: qsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: queue
semicolon
stexcwhitespace var: qlen
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: push
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: take
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: peek
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: QN
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: QN
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: QN
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace notwhitespace lparen
var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: contains
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotvar: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: transfer
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: q2
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q2'
rparen
whitespace equalopwhitespace lparen
var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace var: qlen
whitespace lparen
var: Q2
rparen
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: QN'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace lparen
whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: QN'
whitespace rparen
whitespace implieswhitespace whitespace lparen
var: qlen
whitespace lparen
var: QN'
rparen
whitespace equalopwhitespace lparen
var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: v
rbrace
rparen
whitespace rcurly
semicolon
                                                        Synthesis returned witout resulttypewhitespace var: queue
semicolon
whitespace stexcwhitespace var: qdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vqmem
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: qsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: queue
semicolon
stexcwhitespace var: qlen
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: push
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: take
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: peek
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: QN
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: QN
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: QN
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace notwhitespace lparen
var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: contains
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotvar: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: transfer
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: q2
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q2'
rparen
whitespace equalopwhitespace lparen
var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace var: qlen
whitespace lparen
var: Q2
rparen
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace whitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
rparen
whitespace implieswhitespace whitespace lparen
var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
rparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                            
 Num args 1
 BVi var_h75
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                            
 Num args 1
 BVi var_h167
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                  
 Num args 1
 BVi var_h271
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                                                      
 Num args 1
 BVi var_h376
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                                      
 Num args 1
 BVi var_h468
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h704
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h928
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1182
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1466
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1780
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h2124
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h2421
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
 Num args 1
 BVi var_h2742
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3087
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3456
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3849
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h4157
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h4483
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h5187
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h5801
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h6314
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h6712
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h7560
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h8294
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h9058
 The WP Case 
 The WP Casetypewhitespace var: queue
semicolon
whitespace stexcwhitespace var: qdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: vqmem
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: qsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: queue
whitespace colon
whitespace var: queue
semicolon
stexcwhitespace var: qlen
whitespace colon
whitespace var: queue
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace rcurly
semicolon
var: push
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: take
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: pop
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: peek
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: top
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace implieswhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: a
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q'
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q'
rparen
whitespace equalopwhitespace int: 0
whitespace whitespace rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: queue
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: queue
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: QN
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: QN
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: QN
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace notwhitespace lparen
var: qlen
whitespace lparen
var: Q
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: contains
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace implieswhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace lessthanopwhitespace int: 0
rparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q'
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace truerparen
whitespace conjwhitespace whitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
whitespace iffwhitespace var: vqmem
whitespace lparen
var: Q
comma
whitespace var: x
rparen
whitespace equalopwhitespace falserparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: add
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotvar: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace int: 1
whitespace conjwhitespace var: qdom
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
var: transfer
whitespace colon
whitespace lparen
var: q1
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace lparen
var: q2
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q2'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q1
rparen
whitespace equalopwhitespace var: Q1'
whitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2
whitespace conjwhitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q2
rparen
whitespace equalopwhitespace var: Q2'
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q2'
rparen
whitespace equalopwhitespace lparen
var: qlen
whitespace lparen
var: Q1
rparen
whitespace pluswhitespace var: qlen
whitespace lparen
var: Q2
rparen
rparen
whitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace notwhitespace lbrace
var: q1
whitespace equalopwhitespace var: q2
rbrace
whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: q
whitespace colon
whitespace refwhitespace var: queue
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
whitespace colon
whitespace var: queue
rparen
dotwhitespace var: qdom
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qlen
whitespace lparen
var: Q1
rparen
whitespace lessthanopwhitespace int: 0
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: Q1
colon
whitespace var: queue
rparen
comma
whitespace lparen
var: Q1'
whitespace colon
whitespace var: queue
rparen
dotwhitespace whitespace whitespace lparen
var: qsel
whitespace lparen
var: h
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1
whitespace conjwhitespace whitespace var: qsel
whitespace lparen
var: h'
comma
whitespace var: q
rparen
whitespace equalopwhitespace var: Q1'
rparen
whitespace implieswhitespace whitespace lparen
var: vqmem
whitespace lparen
var: Q1'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: qlen
whitespace lparen
var: Q1'
rparen
whitespace equalopwhitespace var: qlen
whitespace lparen
var: Q1
rparen
rparen
whitespace whitespace rcurly
semicolon
                                                                                                                                                                            
 Num args 1
 BVi var_h75
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                            
 Num args 1
 BVi var_h167
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                  
 Num args 1
 BVi var_h271
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                                                      
 Num args 1
 BVi var_h376
 The WP Case 
 The WP Case 2                                                                                                                                                                                                                                                                                                                                                                                                                                      
 Num args 1
 BVi var_h468
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h704
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h928
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1182
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1466
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h1780
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h2124
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h2421
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h2742
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3087
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3456
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h3849
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h4157
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h4483
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h5187
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h5801
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h6314
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h6712
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h7560
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h8294
 The WP Case 
 The WP Case
 Num args 1
 BVi var_h9058
 The WP Case 
 The WP Casetypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
dottypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
dottypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
dottypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
dottypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: A
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: A
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: extract_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: insert
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace conjwhitespace lparen
notwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
rparen
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace var: Top
whitespace lessthanopwhitespace var: v
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace lparen
var: pqdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
rparen
whitespace implieswhitespace whitespace lparen
var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: A
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: A
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: extract_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: insert
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace conjwhitespace lparen
notwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
rparen
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace var: Top
whitespace lessthanopwhitespace var: v
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace lparen
var: pqdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
rparen
whitespace implieswhitespace whitespace lparen
var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace whitespace whitespace rcurly
semicolon
ynthesis returned witout resulttypewhitespace var: pq
semicolon
stexcwhitespace var: pqdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: pqsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: pq
whitespace colon
whitespace var: pq
semicolon
stexcwhitespace var: pqlen
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: pqmem
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: minimum
whitespace colon
whitespace var: pq
whitespace colon
whitespace var: int
semicolon
var: Top
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace int: 0
whitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: Top
whitespace rcurly
semicolon
var: is_empty
whitespace colon
whitespace lparen
var: pqueue
colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace equalopwhitespace int: 0
rparen
whitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
var: size
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace conjwhitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: find_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotlambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace whitespace var: find_min_exc
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: v
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace lbrace
var: h'
whitespace equalopwhitespace var: h
rbrace
whitespace rcurly
semicolon
whitespace var: delete_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: A
whitespace colon
whitespace var: int
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: A
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: A
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: extract_min
whitespace colon
whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace implieswhitespace whitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace int: 0
rparen
whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: minimum
whitespace lparen
var: P
rparen
whitespace equalopwhitespace var: v
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: v
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: pqlen
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: pqlen
whitespace lparen
var: P
rparen
whitespace ar-minuswhitespace int: 1
whitespace whitespace rcurly
semicolon
whitespace var: insert
whitespace colon
whitespace lparen
var: x
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
comma
whitespace lparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqsel
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P
whitespace conjwhitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace var: P'
whitespace conjwhitespace var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace conjwhitespace lparen
notwhitespace lparen
var: minimum
whitespace lparen
var: P
rparen
whitespace lessthanopwhitespace var: x
rparen
whitespace implieswhitespace whitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: minimum
whitespace lparen
var: P
rparen
rparen
whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
lparen
var: pqueue
whitespace colon
whitespace refwhitespace var: pq
rparen
whitespace arrow
whitespace whitespace lparen
var: x
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace var: Top
whitespace lessthanopwhitespace var: v
rcurly
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P
whitespace colon
whitespace var: pq
rparen
dotwhitespace var: pqdom
whitespace lparen
var: h
comma
whitespace var: pqueue
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: pq
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: pq
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: P'
whitespace colon
whitespace var: pq
rparen
dotwhitespace lparen
var: pqdom
whitespace lparen
var: h
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace whitespace var: pqsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: P'
rparen
whitespace implieswhitespace whitespace lparen
var: pqmem
whitespace lparen
var: P'
comma
whitespace var: x
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: minimum
whitespace lparen
var: P'
rparen
whitespace equalopwhitespace var: x
rparen
whitespace whitespace whitespace rcurly
semicolon
                    Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: keyset
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: keyset
whitespace lparen
var: H1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                                                                              typewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: keyset
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: keyset
whitespace lparen
var: H1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                                                              Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: keyset
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: keyset
whitespace lparen
var: H1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                                                                          typewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: keyset
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: keyset
whitespace lparen
var: H1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: dom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                                                              Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                                                                                                                                                                                                                                                                                                                                                                                                                                        Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                              Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                                      Synthesis returned witout resulttypewhitespace var: key
semicolon
typewhitespace var: table
semicolon
stexcwhitespace var: hdom
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsel
whitespace colon
whitespace var: heap
whitespace colon
whitespace refwhitespace var: table
whitespace colon
whitespace var: table
semicolon
stexcwhitespace var: hmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: key
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hsize
whitespace colon
whitespace var: table
whitespace colon
whitespace var: int
semicolon
whitespace stexcwhitespace var: hvmem
whitespace colon
whitespace var: table
whitespace colon
whitespace var: a
whitespace colon
whitespace var: bool
semicolon
stexcwhitespace var: hlen
whitespace colon
whitespace lbrace
var: a
rbrace
whitespace colon
whitespace var: int
semicolon
var: create
whitespace colon
whitespace lparen
var: n
whitespace colon
whitespace var: int
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: clear
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: reset
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truercurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
whitespace lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H'
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace int: 0
rcurly
semicolon
var: copy
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
comma
whitespace lparen
var: HN
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: v
rparen
whitespace equalopwhitespace var: HN
whitespace conjwhitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: hsize
whitespace lparen
var: HN
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace whitespace rcurly
semicolon
var: population
colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: length
whitespace colon
whitespace lparen
var: ht1
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: int
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: int
whitespace rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H1
colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: H1
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht1
rparen
whitespace equalopwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht1
rparen
whitespace conjwhitespace var: v
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H1
rparen
whitespace rcurly
semicolon
var: iter
colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace whitespace lparen
var: f
whitespace colon
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace var: unit
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace var: unit
semicolon
var: fold
colon
whitespace lparen
var: f
whitespace colon
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: v
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace lparen
var: i
colon
whitespace var: b
rparen
whitespace arrow
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: init
whitespace colon
whitespace var: b
rparen
whitespace arrow
whitespace whitespace lcurly
var: res
whitespace colon
whitespace var: b
whitespace pipe
whitespace truercurly
semicolon
var: add
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace lparen
var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace implieswhitespace var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace pluswhitespace int: 1
whitespace rcurly
semicolon
var: remove
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace lambdalparen
var: H
whitespace colon
whitespace var: table
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace var: hmem
whitespace lparen
var: H
comma
var: k
rparen
whitespace equalopwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: unit
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: unit
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace conjwhitespace var: hsize
whitespace lparen
var: H'
rparen
whitespace equalopwhitespace var: hsize
whitespace lparen
var: H
rparen
whitespace ar-minuswhitespace int: 1
whitespace rcurly
semicolon
var: find
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace lbrace
var: a
rbrace
pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace lbrace
var: a
rbrace
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace implieswhitespace notwhitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace conjwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falsewhitespace implieswhitespace whitespace lparen
var: hlen
whitespace lparen
var: v
rparen
whitespace equalopwhitespace int: 0
rparen
rparen
whitespace whitespace rcurly
semicolon
whitespace var: mem
colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace var: hdom
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace var: bool
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace var: bool
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
whitespace conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace lbrace
var: H'
whitespace equalopwhitespace var: H
rbrace
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace truerbrace
whitespace iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace truerparen
rparen
whitespace conjwhitespace lparen
lbrace
var: v
whitespace equalopwhitespace falserbrace
iffwhitespace lparen
var: hmem
whitespace lparen
var: H
comma
whitespace var: k
rparen
whitespace equalopwhitespace falserparen
rparen
whitespace whitespace whitespace rcurly
semicolon
var: goal
whitespace colon
whitespace lparen
var: ht
whitespace colon
whitespace refwhitespace var: table
rparen
whitespace arrow
whitespace lparen
var: k
whitespace colon
whitespace var: key
rparen
whitespace arrow
whitespace lparen
var: val
whitespace colon
whitespace var: a
rparen
whitespace arrow
whitespace whitespace var: State
whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
dotwhitespace truewhitespace rcurly
whitespace whitespace var: v
whitespace colon
whitespace lcurly
whitespace var: v
whitespace colon
whitespace refwhitespace var: table
whitespace pipe
whitespace truercurly
whitespace whitespace lcurly
lambdalparen
var: h
whitespace colon
whitespace var: heap
rparen
comma
whitespace lparen
var: v
whitespace colon
whitespace refwhitespace var: table
rparen
comma
whitespace lparen
var: h'
whitespace colon
whitespace var: heap
rparen
dotwhitespace whitespace lambdalparen
var: H
colon
whitespace var: table
rparen
comma
whitespace lparen
var: H'
whitespace colon
whitespace var: table
rparen
dotwhitespace whitespace var: hsel
whitespace lparen
var: h
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H
conjwhitespace whitespace var: hsel
whitespace lparen
var: h'
comma
whitespace var: ht
rparen
whitespace equalopwhitespace var: H'
whitespace conjwhitespace var: hvmem
whitespace lparen
var: H'
comma
whitespace var: val
rparen
whitespace equalopwhitespace truewhitespace conjwhitespace var: hmem
whitespace lparen
var: H'
comma
whitespace var: k
rparen
whitespace equalopwhitespace truewhitespace whitespace rcurly
semicolon
                              Synthesis returned witout result